{"version":3,"sources":["components/TimeItem/TimeItem.tsx","components/TimeChart/TimeChart.tsx","App.tsx","index.tsx"],"names":["TimeItem","props","fillRef","useRef","name","left","fill","value","setWidth","useEffect","window","addEventListener","current","clientWidth","className","ref","style","width","TimeChart","useState","timeSpent","times","setTimes","areaWidth","setAreaWidth","wholeTime","reduce","a","b","time","elementsWidth","useMemo","map","Math","round","offsetLeft","useCallback","index","slice","handleRandomClick","prevState","oldTime","random","toFixed","interval","setInterval","clearInterval","type","onClick","App","Root","StrictMode","createRoot","document","getElementById","render"],"mappings":"wSAUaA,EAA4B,SAACC,GACxC,IAAMC,EAAUC,iBAAuB,MAGrCC,EAKEH,EALFG,KACAC,EAIEJ,EAJFI,KACAC,EAGEL,EAHFK,KACAC,EAEEN,EAFFM,MACAC,EACEP,EADFO,SAWF,OARAC,qBAAU,WACRC,OAAOC,iBAAiB,UAAU,WAC5BT,EAAQU,SACVJ,EAASN,EAAQU,QAAQC,YAE5B,GACF,GAAE,IAGD,sBAAKC,UAAU,aAAf,UACE,qBAAKA,UAAU,aAAf,SACGV,IAEH,qBAAKU,UAAU,aAAaC,IAAKb,EAAjC,SACE,qBACEY,UAAU,kBACVE,MAAO,CACLX,KAAK,GAAD,OAAKA,EAAL,MACJY,MAAM,GAAD,OAAKX,EAAL,OAJT,SAOE,qBAAKQ,UAAU,mBAAf,SACGP,UAMZ,ECrCYW,EAAsB,WACjC,MAA0BC,mBAAsBC,GAAhD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCH,mBAAS,KAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAIMC,EAAYJ,EAAMK,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAEC,IAAhB,GAAsB,GAE/CC,EAAgBC,mBAAS,WAC7B,OAAOV,EAAMW,KAAI,SAAAH,GAAI,OAAII,KAAKC,MAAOL,EAAKA,KAAON,EAAaE,EAAzC,GACtB,GAAG,CAACJ,EAAOI,EAAWF,IAEjBY,EAAaC,uBAAY,SAACC,GAC9B,OAAc,IAAVA,EACK,EAGFP,EAAcQ,MAAM,EAAGD,GAAOX,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,CAAd,GAC7C,GAAE,CAACE,IAEES,EAAoB,WACxBjB,GAAS,SAAAkB,GAAS,OAAIA,EAAUR,KAAI,SAAAS,GAClC,OAAO,2BAAKA,GAAZ,IAAqBZ,OAAwB,GAAhBI,KAAKS,UAAeC,QAAQ,IAC1D,GAFiB,GAGnB,EAcD,OAZAlC,qBAAU,WACR,IAAMmC,EAAWC,aAAY,WAC3BN,GACD,GAzBmB,OA2BpB,OAAO,WACDK,GACFE,cAAcF,EAEjB,CACF,IAGC,sBAAK9B,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,kCAIA,qBAAKA,UAAU,cAAc,cAAY,aAAzC,SACGO,EAAMW,KAAI,SAACH,EAAMQ,GAAP,OACT,cAAC,EAAD,CACEjC,KAAMyB,EAAKzB,KACXC,KAAM8B,EAAWE,GACjB/B,KAAMwB,EAAcO,GACpB9B,MAAOc,EAAMgB,GAAOR,KACpBrB,SAAUgB,GACLK,EAAKzB,KAAOyB,EAAKA,KAPf,MAYb,wBACEkB,KAAK,SACLjC,UAAU,eACVkC,QAAST,EACT,cAAY,aAJd,sBAUL,EC3EYU,EAAgB,WAC3B,OACE,qBAAKnC,UAAU,MAAM,cAAY,MAAjC,SACE,cAAC,EAAD,KAGL,ECLKoC,EAAO,kBACX,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,KAFS,EAMbC,qBAAWC,SAASC,eAAe,SAChCC,OAAO,cAAC,EAAD,I","file":"static/js/main.aed7c497.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\n\ntype Props = {\n  name: string,\n  left: number,\n  fill: number,\n  value: number,\n  setWidth: CallableFunction,\n};\n\nexport const TimeItem: React.FC<Props> = (props) => {\n  const fillRef = useRef<HTMLDivElement>(null);\n\n  const {\n    name,\n    left,\n    fill,\n    value,\n    setWidth,\n  } = props;\n\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      if (fillRef.current) {\n        setWidth(fillRef.current.clientWidth);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"time__item\">\n      <div className=\"time__name\">\n        {name}\n      </div>\n      <div className=\"time__data\" ref={fillRef}>\n        <div\n          className=\"time__data-fill\"\n          style={{\n            left: `${left}px`,\n            width: `${fill}px`,\n          }}\n        >\n          <div className=\"time__data-value\">\n            {value}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './TimeChart.scss';\nimport React,\n{\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport timeSpent from '../../api/time.json';\nimport { spentTime } from '../../types/spentTime';\nimport { TimeItem } from '../TimeItem/TimeItem';\n\nexport const TimeChart: React.FC = () => {\n  const [times, setTimes] = useState<spentTime[]>(timeSpent);\n  const [areaWidth, setAreaWidth] = useState(400);\n\n  const autoTimeClick = 31800;\n\n  const wholeTime = times.reduce((a, b) => a + b.time, 0);\n\n  const elementsWidth = useMemo((() => {\n    return times.map(time => Math.round((time.time * areaWidth) / wholeTime));\n  }), [times, wholeTime, areaWidth]);\n\n  const offsetLeft = useCallback((index: number) => {\n    if (index === 0) {\n      return 0;\n    }\n\n    return elementsWidth.slice(0, index).reduce((a, b) => a + b);\n  }, [elementsWidth]);\n\n  const handleRandomClick = () => {\n    setTimes(prevState => prevState.map(oldTime => {\n      return { ...oldTime, time: +(Math.random() * 10).toFixed(2) };\n    }));\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      handleRandomClick();\n    }, autoTimeClick);\n\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  });\n\n  return (\n    <div className=\"time\">\n      <h2 className=\"time__title\">\n        spent time (seconds)\n      </h2>\n\n      <div className=\"time__chart\" data-testid=\"time-chart\">\n        {times.map((time, index) => (\n          <TimeItem\n            name={time.name}\n            left={offsetLeft(index)}\n            fill={elementsWidth[index]}\n            value={times[index].time}\n            setWidth={setAreaWidth}\n            key={time.name + time.time}\n          />\n        ))}\n      </div>\n\n      <button\n        type=\"button\"\n        className=\"time__button\"\n        onClick={handleRandomClick}\n        data-testid=\"random-btn\"\n      >\n        RANDOM\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { TimeChart } from './components/TimeChart/TimeChart';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"app\" data-testid=\"app\">\n      <TimeChart />\n    </div>\n  );\n};\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.scss';\nimport { App } from './App';\n\nconst Root = () => (\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}